{
	"name": "Notebook 2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/81c0eba5-b65a-4f50-8c57-6e7e82e459c0/resourceGroups/RG_Databrick_Test/providers/Microsoft.Synapse/workspaces/testsynapsepoc/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://testsynapsepoc.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"spark.conf.set(\r\n",
					"  \"fs.azure.account.key.datalalakesynapse1.blob.core.windows.net\",\r\n",
					"  \"dVCpKzceqhS6yukyP4fzeVwU1W2xjelaSZZH6/tekoeemWaGuE7ZCifJEyjrF39N8tg3JZwaFGYgz2/hDbwtyw==\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"spark.conf.set(\r\n",
					"  \"fs.azure.account.key.datalalakesynapse1.blob.core.windows.net\",\r\n",
					"  \"dVCpKzceqhS6yukyP4fzeVwU1W2xjelaSZZH6/tekoeemWaGuE7ZCifJEyjrF39N8tg3JZwaFGYgz2/hDbwtyw==\")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# spark is an existing SparkSession\r\n",
					"df = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").option(\"delimiter\",\",\").csv(f\"wasbs://synapsecontainter1@datalalakesynapse1.blob.core.windows.net/Personen.CSV\")\r\n",
					"# Displays the content of the DataFrame to stdout\r\n",
					"df.show()"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.createOrReplaceTempView(\"pysparkdftemptable\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\r\n",
					"val scala_df = spark.sqlContext.sql (\"select * from pysparkdftemptable\")\r\n",
					"\r\n",
					"scala_df.write.synapsesql(\"sqlpool.dbo.PySparkTable\", Constants.INTERNAL)"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\r\n",
					"import com.microsoft.azure.sqldb.spark.config.Config\r\n",
					"import com.microsoft.azure.sqldb.spark.connect._\r\n",
					"\r\n",
					"val config = Config(Map(\r\n",
					"  \"url\"            -> \"testsynapsepoc.database.windows.net\",\r\n",
					"  \"databaseName\"   -> \"SQLPoolTest\",\r\n",
					"  \"dbTable\"        -> \"dbo.Personen\",\r\n",
					"  \"user\"           -> \"pft6fe\",\r\n",
					"  \"password\"       -> \"\",\r\n",
					"  \"connectTimeout\" -> \"5\", //seconds\r\n",
					"  \"queryTimeout\"   -> \"5\"  //seconds\r\n",
					"))\r\n",
					"\r\n",
					"val collection = sqlContext.read.sqlDB(config)\r\n",
					"collection.show()"
				],
				"execution_count": 13
			}
		]
	}
}